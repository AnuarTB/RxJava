<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>43</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.observerCheckTerminatedDelayErrorEmptyError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>45</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.observerCheckTerminatedDelayErrorEmptyError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>46</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.observerCheckTerminatedNonDelayErrorError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>47</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.observerCheckTerminatedDelayErrorEmptyError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>48</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.observerCheckTerminatedDelayErrorEmptyError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>49</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.observerCheckTerminatedDelayErrorEmptyError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>52</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.observerCheckTerminatedNonDelayErrorError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>53</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.observerCheckTerminatedNonDelayErrorError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><block>55</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>56</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>44</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>51</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>96</index><block>54</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>118</index><block>57</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>123</index><block>58</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>44</block><killingTest/><description>removed call to io/reactivex/internal/fuseable/SimpleQueue::clear</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>44</block><killingTest/><description>removed call to io/reactivex/disposables/Disposable::dispose</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>49</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.observerCheckTerminatedDelayErrorEmptyResource(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>removed call to io/reactivex/disposables/Disposable::dispose</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>50</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.observerCheckTerminatedDelayErrorEmptyError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>removed call to io/reactivex/Observer::onError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>51</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.observerCheckTerminatedDelayErrorEmptyResource(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>removed call to io/reactivex/Observer::onComplete</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>78</index><block>53</block><killingTest/><description>removed call to io/reactivex/internal/fuseable/SimpleQueue::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>86</index><block>54</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.observerCheckTerminatedNonDelayErrorErrorResource(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>removed call to io/reactivex/disposables/Disposable::dispose</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>92</index><block>54</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.observerCheckTerminatedNonDelayErrorError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>removed call to io/reactivex/Observer::onError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>109</index><block>57</block><killingTest/><description>removed call to io/reactivex/disposables/Disposable::dispose</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLio/reactivex/Observer;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)Z</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>114</index><block>57</block><killingTest/><description>removed call to io/reactivex/Observer::onComplete</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>18</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.checkTerminatedNonDelayErrorError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>20</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.checkTerminatedNonDelayErrorError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>21</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.checkTerminatedNonDelayErrorError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>22</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.checkTerminatedDelayErrorNonEmpty(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>23</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.checkTerminatedDelayErrorEmptyError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>26</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.checkTerminatedNonDelayErrorError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>19</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>25</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>74</index><block>27</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>87</index><block>29</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>92</index><block>30</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.drainMaxLoopMissingBackpressureWithResource(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>19</block><killingTest/><description>removed call to io/reactivex/internal/fuseable/SimpleQueue::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>24</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.checkTerminatedDelayErrorEmptyError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>removed call to org/reactivestreams/Subscriber::onError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>46</index><block>25</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.checkTerminatedDelayErrorEmpty(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>removed call to org/reactivestreams/Subscriber::onComplete</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>27</block><killingTest/><description>removed call to io/reactivex/internal/fuseable/SimpleQueue::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><block>27</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.checkTerminatedNonDelayErrorError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>removed call to org/reactivestreams/Subscriber::onError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>checkTerminated</mutatedMethod><methodDescription>(ZZLorg/reactivestreams/Subscriber;ZLio/reactivex/internal/fuseable/SimpleQueue;Lio/reactivex/internal/util/QueueDrain;)Z</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>83</index><block>29</block><killingTest/><description>removed call to org/reactivestreams/Subscriber::onComplete</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>createQueue</mutatedMethod><methodDescription>(I)Lio/reactivex/internal/fuseable/SimpleQueue;</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>59</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>createQueue</mutatedMethod><methodDescription>(I)Lio/reactivex/internal/fuseable/SimpleQueue;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>10</index><block>60</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>createQueue</mutatedMethod><methodDescription>(I)Lio/reactivex/internal/fuseable/SimpleQueue;</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>59</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>createQueue</mutatedMethod><methodDescription>(I)Lio/reactivex/internal/fuseable/SimpleQueue;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>60</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/QueueDrainHelper::createQueue to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>createQueue</mutatedMethod><methodDescription>(I)Lio/reactivex/internal/fuseable/SimpleQueue;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>61</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/QueueDrainHelper::createQueue to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lio/reactivex/Observer;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>82</index><block>40</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lio/reactivex/Observer;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>31</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lio/reactivex/Observer;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>33</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lio/reactivex/Observer;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>35</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lio/reactivex/Observer;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>37</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lio/reactivex/Observer;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>40</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lio/reactivex/Observer;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/ObservableQueueDrain;)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>73</index><block>39</block><killingTest/><description>removed call to io/reactivex/internal/util/ObservableQueueDrain::accept</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainMaxLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/QueueDrain;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>124</index><block>15</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainMaxLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/QueueDrain;)V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>1</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.drainMaxLoopMissingBackpressureWithResource(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainMaxLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/QueueDrain;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>3</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.drainMaxLoopMissingBackpressureWithResource(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainMaxLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/QueueDrain;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>4</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainMaxLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/QueueDrain;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>6</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.drainMaxLoopMissingBackpressureWithResource(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainMaxLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/QueueDrain;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>8</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.drainMaxLoopMissingBackpressureWithResource(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainMaxLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/QueueDrain;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainMaxLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/QueueDrain;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainMaxLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/QueueDrain;)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><block>12</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.drainMaxLoopMissingBackpressureWithResource(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainMaxLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/QueueDrain;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><block>15</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainMaxLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/QueueDrain;)V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><block>5</block><killingTest/><description>removed call to io/reactivex/disposables/Disposable::dispose</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainMaxLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/QueueDrain;)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>12</block><killingTest/><description>removed call to io/reactivex/internal/fuseable/SimplePlainQueue::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainMaxLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/QueueDrain;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>102</index><block>13</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.drainMaxLoopMissingBackpressureWithResource(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>removed call to io/reactivex/disposables/Disposable::dispose</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>drainMaxLoop</mutatedMethod><methodDescription>(Lio/reactivex/internal/fuseable/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/disposables/Disposable;Lio/reactivex/internal/util/QueueDrain;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>111</index><block>13</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.drainMaxLoopMissingBackpressureWithResource(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>removed call to org/reactivestreams/Subscriber::onError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>isCancelled</mutatedMethod><methodDescription>(Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>70</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.postCompleteCancelled(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>isCancelled</mutatedMethod><methodDescription>(Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>71</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.isCancelled(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>isCancelled</mutatedMethod><methodDescription>(Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>71</block><killingTest/><description>removed call to io/reactivex/exceptions/Exceptions::throwIfFatal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postComplete</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>90</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.completeRequestRace(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postComplete</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>92</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.completeRequestRace(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postComplete</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)V</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>86</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.postCompleteCancelled(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postComplete</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)V</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>88</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.postCompleteWithRequest(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postComplete</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>90</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.completeRequestRace(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postComplete</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)V</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>92</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.completeRequestRace(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postComplete</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)V</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>93</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.completeRequestRace(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postComplete</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>87</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.postCompleteEmpty(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>removed call to org/reactivestreams/Subscriber::onComplete</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>98</index><block>83</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>72</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>77</block><killingTest/><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>83</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>83</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><block>85</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>72</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>73</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.postCompleteCancelled(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>75</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.postCompleteCancelledAfterOne(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>78</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.postCompleteCancelledAfterOne(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>80</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.postCompleteWithRequest(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><block>82</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>83</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>74</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>76</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><block>79</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>79</index><block>81</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.postCompleteWithRequest(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>112</index><block>84</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.completeRequestRace(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>76</block><killingTest/><description>removed call to org/reactivestreams/Subscriber::onComplete</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>46</index><block>77</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.postCompleteCancelledAfterOne(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>removed call to org/reactivestreams/Subscriber::onNext</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteDrain</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>75</index><block>81</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.postCompleteWithRequest(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>removed call to org/reactivestreams/Subscriber::onComplete</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteRequest</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>65</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteRequest</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>65</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.completeRequestRace(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteRequest</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>65</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.completeRequestRace(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteRequest</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>67</block><killingTest/><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteRequest</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>65</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteRequest</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>66</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.completeRequestRace(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteRequest</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>67</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>postCompleteRequest</mutatedMethod><methodDescription>(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/functions/BooleanSupplier;)Z</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><block>68</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>request</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscription;I)V</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>62</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>request</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscription;I)V</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>62</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.requestMaxInt(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>QueueDrainHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.QueueDrainHelper</mutatedClass><mutatedMethod>request</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscription;I)V</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>64</block><killingTest/><description>removed call to org/reactivestreams/Subscription::request</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IF)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>2</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IF)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>2</block><killingTest/><description>Replaced float multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>90</index><block>10</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>3</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>6</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>6</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>10</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>3</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>4</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>6</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>8</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>5</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>71</index><block>9</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>99</index><block>11</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>11</block><killingTest/><description>removed call to io/reactivex/internal/util/OpenHashSet::rehash</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>keys</mutatedMethod><methodDescription>()[Ljava/lang/Object;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>40</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/OpenHashSet::keys to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>mix</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>39</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>mix</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>39</block><killingTest/><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>mix</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>39</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>mix</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>39</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>rehash</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>37</index><block>31</block><killingTest/><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>rehash</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>43</index><block>32</block><killingTest/><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>rehash</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>31</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>rehash</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>31</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>rehash</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>34</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>rehash</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>35</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>rehash</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>35</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>rehash</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>38</block><killingTest/><description>Replaced float multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>rehash</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>31</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>rehash</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>32</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>rehash</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>34</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>rehash</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>35</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>12</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>16</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>16</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>12</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>14</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>16</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>18</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>13</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>15</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>70</index><block>17</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>85</index><block>19</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>22</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><block>23</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><block>24</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><block>26</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>71</index><block>27</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>20</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>20</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>20</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>22</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>29</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>29</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>20</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>22</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>24</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>26</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>27</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>removeEntry</mutatedMethod><methodDescription>(I[Ljava/lang/Object;I)Z</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>21</block><killingTest>io.reactivex.internal.util.OpenHashSetTest.addRemoveCollision(io.reactivex.internal.util.OpenHashSetTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OpenHashSet.java</sourceFile><mutatedClass>io.reactivex.internal.util.OpenHashSet</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>41</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>21</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>22</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>24</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>25</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>22</block><killingTest/><description>removed call to io/reactivex/Observer::onComplete</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>24</block><killingTest/><description>removed call to io/reactivex/Observer::onError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>25</block><killingTest/><description>removed call to io/reactivex/Observer::onNext</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>16</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>18</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>17</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>19</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>20</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>17</block><killingTest/><description>removed call to org/reactivestreams/Subscriber::onComplete</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>19</block><killingTest/><description>removed call to org/reactivestreams/Subscriber::onError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>20</block><killingTest/><description>removed call to org/reactivestreams/Subscriber::onNext</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>33</block><killingTest>io.reactivex.internal.util.NotificationLiteTest.acceptFullObserver(io.reactivex.internal.util.NotificationLiteTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>35</block><killingTest>io.reactivex.internal.util.NotificationLiteTest.acceptFullObserver(io.reactivex.internal.util.NotificationLiteTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>37</block><killingTest>io.reactivex.internal.util.NotificationLiteTest.acceptFullObserver(io.reactivex.internal.util.NotificationLiteTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>34</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>36</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>38</block><killingTest>io.reactivex.internal.util.NotificationLiteTest.acceptFullObserver(io.reactivex.internal.util.NotificationLiteTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>57</index><block>39</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>34</block><killingTest/><description>removed call to io/reactivex/Observer::onComplete</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>36</block><killingTest/><description>removed call to io/reactivex/Observer::onError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>38</block><killingTest>io.reactivex.internal.util.NotificationLiteTest.acceptFullObserver(io.reactivex.internal.util.NotificationLiteTest)</killingTest><description>removed call to io/reactivex/Observer::onSubscribe</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/Observer;)Z</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>39</block><killingTest/><description>removed call to io/reactivex/Observer::onNext</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>26</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>30</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>27</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>29</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>31</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>57</index><block>32</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>27</block><killingTest/><description>removed call to org/reactivestreams/Subscriber::onComplete</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>29</block><killingTest/><description>removed call to org/reactivestreams/Subscriber::onError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>31</block><killingTest/><description>removed call to org/reactivestreams/Subscriber::onSubscribe</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>acceptFull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>32</block><killingTest/><description>removed call to org/reactivestreams/Subscriber::onNext</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>complete</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>2</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/NotificationLite::complete to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>disposable</mutatedMethod><methodDescription>(Lio/reactivex/disposables/Disposable;)Ljava/lang/Object;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>5</block><killingTest>io.reactivex.internal.util.NotificationLiteTest.acceptFullObserver(io.reactivex.internal.util.NotificationLiteTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/NotificationLite::disposable to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>error</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)Ljava/lang/Object;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>3</block><killingTest>io.reactivex.internal.util.NotificationLiteTest.errorNotificationCompare(io.reactivex.internal.util.NotificationLiteTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/NotificationLite::error to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>getDisposable</mutatedMethod><methodDescription>(Ljava/lang/Object;)Lio/reactivex/disposables/Disposable;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>15</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/NotificationLite::getDisposable to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>getError</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Throwable;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>13</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/NotificationLite::getError to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>getSubscription</mutatedMethod><methodDescription>(Ljava/lang/Object;)Lorg/reactivestreams/Subscription;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>14</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/NotificationLite::getSubscription to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>12</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/NotificationLite::getValue to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>isComplete</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>isComplete</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>8</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>isDisposable</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>11</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>isError</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>9</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>isSubscription</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>10</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/NotificationLite::next to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>subscription</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscription;)Ljava/lang/Object;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>4</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/NotificationLite::subscription to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>40</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/NotificationLite::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>8</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.capped(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>10</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.capped(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>9</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.capped(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>replaced return of long value with value + 1 for io/reactivex/internal/util/BackpressureHelper::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>11</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.capped(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>replaced return of long value with value + 1 for io/reactivex/internal/util/BackpressureHelper::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>addCancel</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>13</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.capped(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>addCancel</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>15</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.capped(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>addCancel</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>17</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.capped(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>addCancel</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>14</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.capped(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>replaced return of long value with value + 1 for io/reactivex/internal/util/BackpressureHelper::addCancel</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>addCancel</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>16</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.capped(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>replaced return of long value with value + 1 for io/reactivex/internal/util/BackpressureHelper::addCancel</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>addCancel</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>18</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.capped(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>replaced return of long value with value + 1 for io/reactivex/internal/util/BackpressureHelper::addCancel</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>addCap</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>1</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>addCap</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>1</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.testAddCap(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>addCap</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.testAddCap(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>addCap</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>2</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.testAddCap(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>replaced return of long value with value + 1 for io/reactivex/internal/util/BackpressureHelper::addCap</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>addCap</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>3</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.testAddCap(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>replaced return of long value with value + 1 for io/reactivex/internal/util/BackpressureHelper::addCap</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>multiplyCap</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>4</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.testMultiplyCap(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>multiplyCap</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>4</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.multiplyCap(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>multiplyCap</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>4</block><killingTest/><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>multiplyCap</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>5</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.testMultiplyCap(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>multiplyCap</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>4</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.multiplyCap(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>multiplyCap</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>5</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.multiplyCap(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>multiplyCap</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>6</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.multiplyCap(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>replaced return of long value with value + 1 for io/reactivex/internal/util/BackpressureHelper::multiplyCap</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>multiplyCap</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>7</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.multiplyCap(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>replaced return of long value with value + 1 for io/reactivex/internal/util/BackpressureHelper::multiplyCap</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>produced</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>22</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>produced</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>22</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.producedMore(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>produced</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>20</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.capped(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>produced</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>22</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.producedMore(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>produced</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>produced</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>21</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.capped(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>replaced return of long value with value + 1 for io/reactivex/internal/util/BackpressureHelper::produced</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>produced</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>59</index><block>24</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.producedMore(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>replaced return of long value with value + 1 for io/reactivex/internal/util/BackpressureHelper::produced</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>produced</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>23</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.producedMore(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>removed call to io/reactivex/plugins/RxJavaPlugins::onError</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>producedCancel</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>30</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>producedCancel</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>30</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.producedMoreCancel(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>producedCancel</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>26</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.producedMoreCancel(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>producedCancel</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>28</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.producedMoreCancel(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>producedCancel</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>30</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.producedMoreCancel(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>producedCancel</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>31</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>producedCancel</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>27</block><killingTest/><description>replaced return of long value with value + 1 for io/reactivex/internal/util/BackpressureHelper::producedCancel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>producedCancel</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>29</block><killingTest/><description>replaced return of long value with value + 1 for io/reactivex/internal/util/BackpressureHelper::producedCancel</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>producedCancel</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>70</index><block>32</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.producedMoreCancel(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>replaced return of long value with value + 1 for io/reactivex/internal/util/BackpressureHelper::producedCancel</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BackpressureHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BackpressureHelper</mutatedClass><mutatedMethod>producedCancel</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicLong;J)J</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><block>31</block><killingTest>io.reactivex.internal.util.BackpressureHelperTest.producedMoreCancel(io.reactivex.internal.util.BackpressureHelperTest)</killingTest><description>removed call to io/reactivex/plugins/RxJavaPlugins::onError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(ILjava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>20</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>removed call to java/util/ArrayList::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(ILjava/lang/Object;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>20</block><killingTest/><description>removed call to io/reactivex/internal/util/VolatileSizeArrayList::lazySet</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>10</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>10</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.reentrantOnNextOnNext(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>removed call to io/reactivex/internal/util/VolatileSizeArrayList::lazySet</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>addAll</mutatedMethod><methodDescription>(ILjava/util/Collection;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>14</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>addAll</mutatedMethod><methodDescription>(ILjava/util/Collection;)Z</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>14</block><killingTest/><description>removed call to io/reactivex/internal/util/VolatileSizeArrayList::lazySet</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>addAll</mutatedMethod><methodDescription>(Ljava/util/Collection;)Z</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>13</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>addAll</mutatedMethod><methodDescription>(Ljava/util/Collection;)Z</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>13</block><killingTest/><description>removed call to io/reactivex/internal/util/VolatileSizeArrayList::lazySet</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>clear</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>17</block><killingTest/><description>removed call to java/util/ArrayList::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>clear</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>17</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>removed call to io/reactivex/internal/util/VolatileSizeArrayList::lazySet</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>6</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>containsAll</mutatedMethod><methodDescription>(Ljava/util/Collection;)Z</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>12</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>27</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>28</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>29</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)Ljava/lang/Object;</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>18</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/VolatileSizeArrayList::get to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>30</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>indexOf</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>22</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>3</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>5</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>7</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/VolatileSizeArrayList::iterator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>lastIndexOf</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>23</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>listIterator</mutatedMethod><methodDescription>()Ljava/util/ListIterator;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>24</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/VolatileSizeArrayList::listIterator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>listIterator</mutatedMethod><methodDescription>(I)Ljava/util/ListIterator;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>25</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/VolatileSizeArrayList::listIterator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)Ljava/lang/Object;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>21</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/VolatileSizeArrayList::remove to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(I)Ljava/lang/Object;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>21</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>removed call to io/reactivex/internal/util/VolatileSizeArrayList::lazySet</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>11</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>remove</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>11</block><killingTest/><description>removed call to io/reactivex/internal/util/VolatileSizeArrayList::lazySet</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>removeAll</mutatedMethod><methodDescription>(Ljava/util/Collection;)Z</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>15</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>removeAll</mutatedMethod><methodDescription>(Ljava/util/Collection;)Z</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>15</block><killingTest/><description>removed call to io/reactivex/internal/util/VolatileSizeArrayList::lazySet</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>retainAll</mutatedMethod><methodDescription>(Ljava/util/Collection;)Z</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>16</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>retainAll</mutatedMethod><methodDescription>(Ljava/util/Collection;)Z</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>16</block><killingTest/><description>removed call to io/reactivex/internal/util/VolatileSizeArrayList::lazySet</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(ILjava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>19</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/VolatileSizeArrayList::set to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>subList</mutatedMethod><methodDescription>(II)Ljava/util/List;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>26</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/VolatileSizeArrayList::subList to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[Ljava/lang/Object;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>8</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/VolatileSizeArrayList::toArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>9</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/VolatileSizeArrayList::toArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VolatileSizeArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.VolatileSizeArrayList</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>31</block><killingTest>io.reactivex.internal.util.VolatileSizeArrayListTest.normal(io.reactivex.internal.util.VolatileSizeArrayListTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/VolatileSizeArrayList::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>0</block><killingTest>io.reactivex.internal.util.MiscUtilTest.appendOnlyLinkedArrayListForEachWhileBiAll(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lio/reactivex/Observer;)Z</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>23</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lio/reactivex/Observer;)Z</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>52</index><block>28</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lio/reactivex/Observer;)Z</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>22</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lio/reactivex/Observer;)Z</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lio/reactivex/Observer;)Z</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>24</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lio/reactivex/Observer;)Z</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>26</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lio/reactivex/Observer;)Z</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>27</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lio/reactivex/Observer;)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>68</index><block>30</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>14</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>52</index><block>19</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>13</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>14</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>15</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>17</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>18</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>68</index><block>21</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>2</block><killingTest>io.reactivex.internal.util.MiscUtilTest.appendOnlyLinkedArrayListForEachWhileBiAll(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>2</block><killingTest>io.reactivex.internal.util.MiscUtilTest.appendOnlyLinkedArrayListForEachWhileBiAll(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest>io.reactivex.internal.util.MiscUtilTest.appendOnlyLinkedArrayListForEachWhileBiAll(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>forEachWhile</mutatedMethod><methodDescription>(Lio/reactivex/internal/util/AppendOnlyLinkedArrayList$NonThrowingPredicate;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>5</block><killingTest>io.reactivex.internal.util.MiscUtilTest.appendOnlyLinkedArrayListForEachWhileAll(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>forEachWhile</mutatedMethod><methodDescription>(Lio/reactivex/internal/util/AppendOnlyLinkedArrayList$NonThrowingPredicate;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>51</index><block>10</block><killingTest>io.reactivex.internal.util.MiscUtilTest.appendOnlyLinkedArrayListForEachWhileBigger(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>forEachWhile</mutatedMethod><methodDescription>(Lio/reactivex/internal/util/AppendOnlyLinkedArrayList$NonThrowingPredicate;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>4</block><killingTest>io.reactivex.internal.util.MiscUtilTest.appendOnlyLinkedArrayListForEachWhileBigger(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>forEachWhile</mutatedMethod><methodDescription>(Lio/reactivex/internal/util/AppendOnlyLinkedArrayList$NonThrowingPredicate;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>5</block><killingTest>io.reactivex.internal.util.MiscUtilTest.appendOnlyLinkedArrayListForEachWhileBigger(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>forEachWhile</mutatedMethod><methodDescription>(Lio/reactivex/internal/util/AppendOnlyLinkedArrayList$NonThrowingPredicate;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>6</block><killingTest>io.reactivex.internal.util.MiscUtilTest.appendOnlyLinkedArrayListForEachWhileBigger(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>forEachWhile</mutatedMethod><methodDescription>(Lio/reactivex/internal/util/AppendOnlyLinkedArrayList$NonThrowingPredicate;)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>8</block><killingTest>io.reactivex.internal.util.MiscUtilTest.appendOnlyLinkedArrayListForEachWhileBigger(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>forEachWhile</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/functions/BiPredicate;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>31</block><killingTest>io.reactivex.internal.util.MiscUtilTest.appendOnlyLinkedArrayListForEachWhileBiAll(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>forEachWhile</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/functions/BiPredicate;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><block>36</block><killingTest>io.reactivex.internal.util.MiscUtilTest.appendOnlyLinkedArrayListForEachWhileBiAll(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>forEachWhile</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/functions/BiPredicate;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>31</block><killingTest>io.reactivex.internal.util.MiscUtilTest.appendOnlyLinkedArrayListForEachWhileBiAll(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>forEachWhile</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/functions/BiPredicate;)V</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>32</block><killingTest>io.reactivex.internal.util.MiscUtilTest.appendOnlyLinkedArrayListForEachWhileBiAll(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AppendOnlyLinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.AppendOnlyLinkedArrayList</mutatedClass><mutatedMethod>forEachWhile</mutatedMethod><methodDescription>(Ljava/lang/Object;Lio/reactivex/functions/BiPredicate;)V</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>34</block><killingTest>io.reactivex.internal.util.MiscUtilTest.appendOnlyLinkedArrayListForEachWhileBiAll(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onComplete</mutatedMethod><methodDescription>(Lio/reactivex/Observer;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>25</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.reentrantOnNextOnComplete(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onComplete</mutatedMethod><methodDescription>(Lio/reactivex/Observer;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>26</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.onNextOnCompleteRace(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onComplete</mutatedMethod><methodDescription>(Lio/reactivex/Observer;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>27</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.onErrorOnCompleteRace(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>removed call to io/reactivex/Observer::onError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onComplete</mutatedMethod><methodDescription>(Lio/reactivex/Observer;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>28</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.onNextOnCompleteRace(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>removed call to io/reactivex/Observer::onComplete</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onComplete</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>11</block><killingTest>io.reactivex.internal.util.HalfSerializerSubscriberTest.reentrantOnNextOnComplete(io.reactivex.internal.util.HalfSerializerSubscriberTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onComplete</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>12</block><killingTest>io.reactivex.internal.util.HalfSerializerSubscriberTest.onNextOnCompleteRace(io.reactivex.internal.util.HalfSerializerSubscriberTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onComplete</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>13</block><killingTest>io.reactivex.internal.util.HalfSerializerSubscriberTest.onErrorOnCompleteRace(io.reactivex.internal.util.HalfSerializerSubscriberTest)</killingTest><description>removed call to org/reactivestreams/Subscriber::onError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onComplete</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>14</block><killingTest>io.reactivex.internal.util.HalfSerializerSubscriberTest.onNextOnCompleteRace(io.reactivex.internal.util.HalfSerializerSubscriberTest)</killingTest><description>removed call to org/reactivestreams/Subscriber::onComplete</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onError</mutatedMethod><methodDescription>(Lio/reactivex/Observer;Ljava/lang/Throwable;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>21</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.reentrantErrorOnError(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onError</mutatedMethod><methodDescription>(Lio/reactivex/Observer;Ljava/lang/Throwable;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>22</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.reentrantErrorOnError(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onError</mutatedMethod><methodDescription>(Lio/reactivex/Observer;Ljava/lang/Throwable;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>23</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.reentrantErrorOnError(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>removed call to io/reactivex/Observer::onError</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onError</mutatedMethod><methodDescription>(Lio/reactivex/Observer;Ljava/lang/Throwable;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>24</block><killingTest/><description>removed call to io/reactivex/plugins/RxJavaPlugins::onError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onError</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>7</block><killingTest>io.reactivex.internal.util.HalfSerializerSubscriberTest.reentrantOnNextOnError(io.reactivex.internal.util.HalfSerializerSubscriberTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onError</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>8</block><killingTest>io.reactivex.internal.util.HalfSerializerSubscriberTest.reentrantOnNextOnError(io.reactivex.internal.util.HalfSerializerSubscriberTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onError</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>9</block><killingTest>io.reactivex.internal.util.HalfSerializerSubscriberTest.reentrantErrorOnError(io.reactivex.internal.util.HalfSerializerSubscriberTest)</killingTest><description>removed call to org/reactivestreams/Subscriber::onError</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onError</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>10</block><killingTest/><description>removed call to io/reactivex/plugins/RxJavaPlugins::onError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onNext</mutatedMethod><methodDescription>(Lio/reactivex/Observer;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>15</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.reentrantOnNextOnNext(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onNext</mutatedMethod><methodDescription>(Lio/reactivex/Observer;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>16</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.reentrantOnNextOnNext(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onNext</mutatedMethod><methodDescription>(Lio/reactivex/Observer;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>17</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.reentrantOnNextOnNext(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onNext</mutatedMethod><methodDescription>(Lio/reactivex/Observer;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>18</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.reentrantOnNextOnComplete(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onNext</mutatedMethod><methodDescription>(Lio/reactivex/Observer;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>17</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.reentrantOnNextOnNext(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>removed call to io/reactivex/Observer::onNext</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onNext</mutatedMethod><methodDescription>(Lio/reactivex/Observer;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>19</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.reentrantOnNextOnError(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>removed call to io/reactivex/Observer::onError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onNext</mutatedMethod><methodDescription>(Lio/reactivex/Observer;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>20</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.reentrantOnNextOnComplete(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>removed call to io/reactivex/Observer::onComplete</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onNext</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>io.reactivex.internal.util.HalfSerializerSubscriberTest.reentrantOnNextOnNext(io.reactivex.internal.util.HalfSerializerSubscriberTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onNext</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest>io.reactivex.internal.util.HalfSerializerSubscriberTest.reentrantOnNextOnNext(io.reactivex.internal.util.HalfSerializerSubscriberTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onNext</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTest>io.reactivex.internal.util.HalfSerializerSubscriberTest.reentrantOnNextOnNext(io.reactivex.internal.util.HalfSerializerSubscriberTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onNext</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>4</block><killingTest>io.reactivex.internal.util.HalfSerializerSubscriberTest.reentrantOnNextOnComplete(io.reactivex.internal.util.HalfSerializerSubscriberTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onNext</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>3</block><killingTest>io.reactivex.internal.util.HalfSerializerSubscriberTest.reentrantOnNextOnNext(io.reactivex.internal.util.HalfSerializerSubscriberTest)</killingTest><description>removed call to org/reactivestreams/Subscriber::onNext</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onNext</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>5</block><killingTest>io.reactivex.internal.util.HalfSerializerSubscriberTest.reentrantOnNextOnError(io.reactivex.internal.util.HalfSerializerSubscriberTest)</killingTest><description>removed call to org/reactivestreams/Subscriber::onError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HalfSerializer.java</sourceFile><mutatedClass>io.reactivex.internal.util.HalfSerializer</mutatedClass><mutatedMethod>onNext</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/internal/util/AtomicThrowable;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>6</block><killingTest>io.reactivex.internal.util.HalfSerializerSubscriberTest.reentrantOnNextOnComplete(io.reactivex.internal.util.HalfSerializerSubscriberTest)</killingTest><description>removed call to org/reactivestreams/Subscriber::onComplete</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>composeMessage</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>17</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/EndConsumerHelper::composeMessage to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>reportDoubleSubscription</mutatedMethod><methodDescription>(Ljava/lang/Class;)V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>18</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.checkDoubleDefaultSubscriberNonAnonymous(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>removed call to io/reactivex/plugins/RxJavaPlugins::onError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>setOnce</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;Ljava/lang/Class;)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>5</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.checkDoubleDisposableCompletableObserver(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>setOnce</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;Ljava/lang/Class;)Z</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>6</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.checkDoubleDisposableCompletableObserver(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>setOnce</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;Ljava/lang/Class;)Z</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>7</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>setOnce</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;Ljava/lang/Class;)Z</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>8</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>setOnce</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;Ljava/lang/Class;)Z</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>6</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.checkDoubleDisposableCompletableObserver(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>removed call to io/reactivex/disposables/Disposable::dispose</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>setOnce</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/Disposable;Ljava/lang/Class;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>7</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.checkDoubleDisposableCompletableObserver(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>removed call to io/reactivex/internal/util/EndConsumerHelper::reportDoubleSubscription</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>setOnce</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>13</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.checkDoubleDisposableSubscriber(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>setOnce</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>14</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.checkDoubleDisposableSubscriber(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>setOnce</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>15</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>setOnce</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>16</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>setOnce</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>14</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.checkDoubleDisposableSubscriber(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>removed call to org/reactivestreams/Subscription::cancel</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>setOnce</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>15</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.checkDoubleDisposableSubscriber(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>removed call to io/reactivex/internal/util/EndConsumerHelper::reportDoubleSubscription</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;Ljava/lang/Class;)Z</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.validateDisposable(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;Ljava/lang/Class;)Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.validateDisposable(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;Ljava/lang/Class;)Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>3</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.validateDisposable(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;Ljava/lang/Class;)Z</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>4</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.checkDoubleDefaultObserver(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;Ljava/lang/Class;)Z</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.validateDisposable(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>removed call to io/reactivex/disposables/Disposable::dispose</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>(Lio/reactivex/disposables/Disposable;Lio/reactivex/disposables/Disposable;Ljava/lang/Class;)Z</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>3</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.checkDoubleDefaultObserver(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>removed call to io/reactivex/internal/util/EndConsumerHelper::reportDoubleSubscription</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>9</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.checkDoubleDefaultSubscriberNonAnonymous(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>10</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.checkDoubleDefaultSubscriberNonAnonymous(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>11</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.validateSubscription(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>12</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.checkDoubleDefaultSubscriberNonAnonymous(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>10</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.checkDoubleDefaultSubscriberNonAnonymous(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>removed call to org/reactivestreams/Subscription::cancel</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndConsumerHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.EndConsumerHelper</mutatedClass><mutatedMethod>validate</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;Ljava/lang/Class;)Z</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>11</block><killingTest>io.reactivex.internal.util.EndConsumerHelperTest.checkDoubleDefaultSubscriberNonAnonymous(io.reactivex.internal.util.EndConsumerHelperTest)</killingTest><description>removed call to io/reactivex/internal/util/EndConsumerHelper::reportDoubleSubscription</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>addThrowable</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Throwable;)Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>6</block><killingTest>io.reactivex.internal.util.ExceptionHelperTest.addRace(io.reactivex.internal.util.ExceptionHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>addThrowable</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Throwable;)Z</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>8</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.reentrantErrorOnError(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>addThrowable</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Throwable;)Z</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>addThrowable</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Throwable;)Z</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>7</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>addThrowable</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Throwable;)Z</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>56</index><block>11</block><killingTest>io.reactivex.internal.util.ExceptionHelperTest.addRace(io.reactivex.internal.util.ExceptionHelperTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)Ljava/util/List;</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>17</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)Ljava/util/List;</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>67</index><block>18</block><killingTest/><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)Ljava/util/List;</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>17</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)Ljava/util/List;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>15</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)Ljava/util/List;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>16</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)Ljava/util/List;</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>17</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)Ljava/util/List;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>88</index><block>21</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/ExceptionHelper::flatten to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>terminate</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Throwable;</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>13</block><killingTest>io.reactivex.internal.util.AtomicThrowableTest.isTerminated(io.reactivex.internal.util.AtomicThrowableTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>terminate</mutatedMethod><methodDescription>(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Throwable;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>14</block><killingTest>io.reactivex.internal.util.HalfSerializerSubscriberTest.reentrantOnNextOnComplete(io.reactivex.internal.util.HalfSerializerSubscriberTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/ExceptionHelper::terminate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>throwIfThrowable</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)Ljava/lang/Exception;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>22</block><killingTest>io.reactivex.internal.util.ExceptionHelperTest.throwIfThrowable(io.reactivex.internal.util.ExceptionHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>throwIfThrowable</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)Ljava/lang/Exception;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>23</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/ExceptionHelper::throwIfThrowable to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>timeoutMessage</mutatedMethod><methodDescription>(JLjava/util/concurrent/TimeUnit;)Ljava/lang/String;</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>25</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/ExceptionHelper::timeoutMessage to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>wrapOrThrow</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>wrapOrThrow</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>3</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>wrapOrThrow</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>4</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/ExceptionHelper::wrapOrThrow to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper</mutatedClass><mutatedMethod>wrapOrThrow</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>5</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/ExceptionHelper::wrapOrThrow to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.LinkedArrayList</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>2</block><killingTest>io.reactivex.internal.util.MiscUtilTest.linkedArrayList(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>LinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.LinkedArrayList</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>4</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.LinkedArrayList</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>4</block><killingTest>io.reactivex.internal.util.MiscUtilTest.linkedArrayList(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.LinkedArrayList</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>5</block><killingTest>io.reactivex.internal.util.MiscUtilTest.linkedArrayList(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.LinkedArrayList</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><block>5</block><killingTest>io.reactivex.internal.util.MiscUtilTest.linkedArrayList(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.LinkedArrayList</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>io.reactivex.internal.util.MiscUtilTest.linkedArrayList(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.LinkedArrayList</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>3</block><killingTest>io.reactivex.internal.util.MiscUtilTest.linkedArrayList(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.LinkedArrayList</mutatedClass><mutatedMethod>head</mutatedMethod><methodDescription>()[Ljava/lang/Object;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTest>io.reactivex.internal.util.MiscUtilTest.linkedArrayList(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/LinkedArrayList::head to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.LinkedArrayList</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.LinkedArrayList</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>8</block><killingTest>io.reactivex.internal.util.MiscUtilTest.linkedArrayList(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.LinkedArrayList</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>49</index><block>9</block><killingTest>io.reactivex.internal.util.MiscUtilTest.linkedArrayList(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.LinkedArrayList</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>52</index><block>9</block><killingTest>io.reactivex.internal.util.MiscUtilTest.linkedArrayList(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>LinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.LinkedArrayList</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>8</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.LinkedArrayList</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>8</block><killingTest>io.reactivex.internal.util.MiscUtilTest.linkedArrayList(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.LinkedArrayList</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>9</block><killingTest>io.reactivex.internal.util.MiscUtilTest.linkedArrayList(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinkedArrayList.java</sourceFile><mutatedClass>io.reactivex.internal.util.LinkedArrayList</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>74</index><block>11</block><killingTest>io.reactivex.internal.util.MiscUtilTest.linkedArrayList(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/LinkedArrayList::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MergerBiFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.MergerBiFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>79</index><block>9</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MergerBiFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.MergerBiFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTest>io.reactivex.internal.util.MergerBiFunctionTest.firstEmpty(io.reactivex.internal.util.MergerBiFunctionTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MergerBiFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.MergerBiFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest>io.reactivex.internal.util.MergerBiFunctionTest.bothEmpty(io.reactivex.internal.util.MergerBiFunctionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MergerBiFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.MergerBiFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>3</block><killingTest>io.reactivex.internal.util.MergerBiFunctionTest.secondEmpty(io.reactivex.internal.util.MergerBiFunctionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MergerBiFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.MergerBiFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>5</block><killingTest>io.reactivex.internal.util.MergerBiFunctionTest.secondEmpty(io.reactivex.internal.util.MergerBiFunctionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MergerBiFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.MergerBiFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>7</block><killingTest>io.reactivex.internal.util.MergerBiFunctionTest.firstEmpty(io.reactivex.internal.util.MergerBiFunctionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MergerBiFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.MergerBiFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>8</block><killingTest>io.reactivex.internal.util.MergerBiFunctionTest.secondEmpty(io.reactivex.internal.util.MergerBiFunctionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MergerBiFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.MergerBiFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>9</block><killingTest>io.reactivex.internal.util.MergerBiFunctionTest.sameSize(io.reactivex.internal.util.MergerBiFunctionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MergerBiFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.MergerBiFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>10</block><killingTest>io.reactivex.internal.util.MergerBiFunctionTest.sameSize(io.reactivex.internal.util.MergerBiFunctionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MergerBiFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.MergerBiFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>13</block><killingTest>io.reactivex.internal.util.MergerBiFunctionTest.sameSize(io.reactivex.internal.util.MergerBiFunctionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MergerBiFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.MergerBiFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><block>16</block><killingTest>io.reactivex.internal.util.MergerBiFunctionTest.secondEmpty(io.reactivex.internal.util.MergerBiFunctionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MergerBiFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.MergerBiFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><block>17</block><killingTest>io.reactivex.internal.util.MergerBiFunctionTest.secondEmpty(io.reactivex.internal.util.MergerBiFunctionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MergerBiFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.MergerBiFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>160</index><block>19</block><killingTest>io.reactivex.internal.util.MergerBiFunctionTest.firstEmpty(io.reactivex.internal.util.MergerBiFunctionTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MergerBiFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.MergerBiFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>2</block><killingTest>io.reactivex.internal.util.MergerBiFunctionTest.bothEmpty(io.reactivex.internal.util.MergerBiFunctionTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/MergerBiFunction::apply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MergerBiFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.MergerBiFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>173</index><block>21</block><killingTest>io.reactivex.internal.util.MergerBiFunctionTest.secondEmpty(io.reactivex.internal.util.MergerBiFunctionTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/MergerBiFunction::apply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Pow2.java</sourceFile><mutatedClass>io.reactivex.internal.util.Pow2</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>2</block><killingTest>io.reactivex.internal.util.MiscUtilTest.isPowerOf2(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Pow2.java</sourceFile><mutatedClass>io.reactivex.internal.util.Pow2</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>2</block><killingTest>io.reactivex.internal.util.MiscUtilTest.isPowerOf2(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Pow2.java</sourceFile><mutatedClass>io.reactivex.internal.util.Pow2</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>2</block><killingTest>io.reactivex.internal.util.MiscUtilTest.isPowerOf2(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Pow2.java</sourceFile><mutatedClass>io.reactivex.internal.util.Pow2</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>4</block><killingTest>io.reactivex.internal.util.MiscUtilTest.isPowerOf2(io.reactivex.internal.util.MiscUtilTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>Pow2.java</sourceFile><mutatedClass>io.reactivex.internal.util.Pow2</mutatedClass><mutatedMethod>roundToPowerOfTwo</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>Pow2.java</sourceFile><mutatedClass>io.reactivex.internal.util.Pow2</mutatedClass><mutatedMethod>roundToPowerOfTwo</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>1</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Pow2.java</sourceFile><mutatedClass>io.reactivex.internal.util.Pow2</mutatedClass><mutatedMethod>roundToPowerOfTwo</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>1</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.observerCheckTerminatedNonDelayErrorError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Pow2.java</sourceFile><mutatedClass>io.reactivex.internal.util.Pow2</mutatedClass><mutatedMethod>roundToPowerOfTwo</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>1</block><killingTest>io.reactivex.internal.util.QueueDrainHelperTest.observerCheckTerminatedNonDelayErrorError(io.reactivex.internal.util.QueueDrainHelperTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockingHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BlockingHelper</mutatedClass><mutatedMethod>awaitForComplete</mutatedMethod><methodDescription>(Ljava/util/concurrent/CountDownLatch;Lio/reactivex/disposables/Disposable;)V</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>io.reactivex.internal.util.BlockingHelperTest.interrupted(io.reactivex.internal.util.BlockingHelperTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BlockingHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BlockingHelper</mutatedClass><mutatedMethod>awaitForComplete</mutatedMethod><methodDescription>(Ljava/util/concurrent/CountDownLatch;Lio/reactivex/disposables/Disposable;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>3</block><killingTest/><description>removed call to io/reactivex/internal/util/BlockingHelper::verifyNonBlocking</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockingHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BlockingHelper</mutatedClass><mutatedMethod>awaitForComplete</mutatedMethod><methodDescription>(Ljava/util/concurrent/CountDownLatch;Lio/reactivex/disposables/Disposable;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>3</block><killingTest>io.reactivex.internal.util.BlockingHelperTest.interrupted(io.reactivex.internal.util.BlockingHelperTest)</killingTest><description>removed call to java/util/concurrent/CountDownLatch::await</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockingHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BlockingHelper</mutatedClass><mutatedMethod>awaitForComplete</mutatedMethod><methodDescription>(Ljava/util/concurrent/CountDownLatch;Lio/reactivex/disposables/Disposable;)V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>4</block><killingTest>io.reactivex.internal.util.BlockingHelperTest.interrupted(io.reactivex.internal.util.BlockingHelperTest)</killingTest><description>removed call to io/reactivex/disposables/Disposable::dispose</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockingHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BlockingHelper</mutatedClass><mutatedMethod>awaitForComplete</mutatedMethod><methodDescription>(Ljava/util/concurrent/CountDownLatch;Lio/reactivex/disposables/Disposable;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>4</block><killingTest>io.reactivex.internal.util.BlockingHelperTest.interrupted(io.reactivex.internal.util.BlockingHelperTest)</killingTest><description>removed call to java/lang/Thread::interrupt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BlockingHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BlockingHelper</mutatedClass><mutatedMethod>verifyNonBlocking</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BlockingHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BlockingHelper</mutatedClass><mutatedMethod>verifyNonBlocking</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>7</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BlockingHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.BlockingHelper</mutatedClass><mutatedMethod>verifyNonBlocking</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>8</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EmptyComponent.java</sourceFile><mutatedClass>io.reactivex.internal.util.EmptyComponent</mutatedClass><mutatedMethod>asObserver</mutatedMethod><methodDescription>()Lio/reactivex/Observer;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>2</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/EmptyComponent::asObserver to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EmptyComponent.java</sourceFile><mutatedClass>io.reactivex.internal.util.EmptyComponent</mutatedClass><mutatedMethod>asSubscriber</mutatedMethod><methodDescription>()Lorg/reactivestreams/Subscriber;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/EmptyComponent::asSubscriber to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EmptyComponent.java</sourceFile><mutatedClass>io.reactivex.internal.util.EmptyComponent</mutatedClass><mutatedMethod>isDisposed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>4</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EmptyComponent.java</sourceFile><mutatedClass>io.reactivex.internal.util.EmptyComponent</mutatedClass><mutatedMethod>onError</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>10</block><killingTest/><description>removed call to io/reactivex/plugins/RxJavaPlugins::onError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EmptyComponent.java</sourceFile><mutatedClass>io.reactivex.internal.util.EmptyComponent</mutatedClass><mutatedMethod>onSubscribe</mutatedMethod><methodDescription>(Lio/reactivex/disposables/Disposable;)V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>7</block><killingTest/><description>removed call to io/reactivex/disposables/Disposable::dispose</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EmptyComponent.java</sourceFile><mutatedClass>io.reactivex.internal.util.EmptyComponent</mutatedClass><mutatedMethod>onSubscribe</mutatedMethod><methodDescription>(Lorg/reactivestreams/Subscription;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>8</block><killingTest/><description>removed call to org/reactivestreams/Subscription::cancel</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite$ErrorNotification</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>3</block><killingTest>io.reactivex.internal.util.NotificationLiteTest.errorNotificationCompare(io.reactivex.internal.util.NotificationLiteTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite$ErrorNotification</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>4</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite$ErrorNotification</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>5</block><killingTest>io.reactivex.internal.util.NotificationLiteTest.errorNotificationCompare(io.reactivex.internal.util.NotificationLiteTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite$ErrorNotification</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>2</block><killingTest>io.reactivex.internal.util.NotificationLiteTest.errorNotificationCompare(io.reactivex.internal.util.NotificationLiteTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite$ErrorNotification</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>1</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/NotificationLite$ErrorNotification::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ArrayListSupplier.java</sourceFile><mutatedClass>io.reactivex.internal.util.ArrayListSupplier</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/util/List;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>4</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/ArrayListSupplier::apply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ArrayListSupplier.java</sourceFile><mutatedClass>io.reactivex.internal.util.ArrayListSupplier</mutatedClass><mutatedMethod>asCallable</mutatedMethod><methodDescription>()Ljava/util/concurrent/Callable;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/ArrayListSupplier::asCallable to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ArrayListSupplier.java</sourceFile><mutatedClass>io.reactivex.internal.util.ArrayListSupplier</mutatedClass><mutatedMethod>asFunction</mutatedMethod><methodDescription>()Lio/reactivex/functions/Function;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>2</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/ArrayListSupplier::asFunction to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ArrayListSupplier.java</sourceFile><mutatedClass>io.reactivex.internal.util.ArrayListSupplier</mutatedClass><mutatedMethod>call</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>3</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/ArrayListSupplier::call to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AtomicThrowable.java</sourceFile><mutatedClass>io.reactivex.internal.util.AtomicThrowable</mutatedClass><mutatedMethod>addThrowable</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)Z</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>io.reactivex.internal.util.HalfSerializerObserverTest.reentrantErrorOnError(io.reactivex.internal.util.HalfSerializerObserverTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AtomicThrowable.java</sourceFile><mutatedClass>io.reactivex.internal.util.AtomicThrowable</mutatedClass><mutatedMethod>isTerminated</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>3</block><killingTest>io.reactivex.internal.util.AtomicThrowableTest.isTerminated(io.reactivex.internal.util.AtomicThrowableTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AtomicThrowable.java</sourceFile><mutatedClass>io.reactivex.internal.util.AtomicThrowable</mutatedClass><mutatedMethod>isTerminated</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>5</block><killingTest>io.reactivex.internal.util.AtomicThrowableTest.isTerminated(io.reactivex.internal.util.AtomicThrowableTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AtomicThrowable.java</sourceFile><mutatedClass>io.reactivex.internal.util.AtomicThrowable</mutatedClass><mutatedMethod>terminate</mutatedMethod><methodDescription>()Ljava/lang/Throwable;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>io.reactivex.internal.util.AtomicThrowableTest.isTerminated(io.reactivex.internal.util.AtomicThrowableTest)</killingTest><description>mutated return of Object value for io/reactivex/internal/util/AtomicThrowable::terminate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SorterFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.SorterFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>1</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/SorterFunction::apply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SorterFunction.java</sourceFile><mutatedClass>io.reactivex.internal.util.SorterFunction</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest/><description>removed call to java/util/Collections::sort</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BlockingIgnoringReceiver.java</sourceFile><mutatedClass>io.reactivex.internal.util.BlockingIgnoringReceiver</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTest/><description>removed call to io/reactivex/internal/util/BlockingIgnoringReceiver::countDown</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BlockingIgnoringReceiver.java</sourceFile><mutatedClass>io.reactivex.internal.util.BlockingIgnoringReceiver</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>2</block><killingTest/><description>removed call to io/reactivex/internal/util/BlockingIgnoringReceiver::countDown</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HashMapSupplier.java</sourceFile><mutatedClass>io.reactivex.internal.util.HashMapSupplier</mutatedClass><mutatedMethod>asCallable</mutatedMethod><methodDescription>()Ljava/util/concurrent/Callable;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/HashMapSupplier::asCallable to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HashMapSupplier.java</sourceFile><mutatedClass>io.reactivex.internal.util.HashMapSupplier</mutatedClass><mutatedMethod>call</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>2</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/HashMapSupplier::call to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ListAddBiConsumer.java</sourceFile><mutatedClass>io.reactivex.internal.util.ListAddBiConsumer</mutatedClass><mutatedMethod>apply</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/ListAddBiConsumer::apply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ListAddBiConsumer.java</sourceFile><mutatedClass>io.reactivex.internal.util.ListAddBiConsumer</mutatedClass><mutatedMethod>instance</mutatedMethod><methodDescription>()Lio/reactivex/functions/BiFunction;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/ListAddBiConsumer::instance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite$DisposableNotification</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>1</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/NotificationLite$DisposableNotification::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NotificationLite.java</sourceFile><mutatedClass>io.reactivex.internal.util.NotificationLite$SubscriptionNotification</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>1</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/NotificationLite$SubscriptionNotification::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ExceptionHelper.java</sourceFile><mutatedClass>io.reactivex.internal.util.ExceptionHelper$Termination</mutatedClass><mutatedMethod>fillInStackTrace</mutatedMethod><methodDescription>()Ljava/lang/Throwable;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTest/><description>mutated return of Object value for io/reactivex/internal/util/ExceptionHelper$Termination::fillInStackTrace to ( if (x != null) null else throw new RuntimeException )</description></mutation>
</mutations>
